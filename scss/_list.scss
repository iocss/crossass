// List
//
// Copyright (c) 2014 Whizark
// @category list

@import "variable";

// Returns whether a list contains a value
// @function x-list-has
// @param    $list {List} The list to search
// @return         {Bool} True if the value is found in the list, otherwise false
@function x-list-has($list, $value) {
    @each $item in $list {
        @if $item == $value {
            @return true;
        }
    }

    @return false;
}

// Returns the first value of a list
// @function x-list-first
// @param    $list {List}        The list containing the value
// @return         {Number|Null} The first value of the list, or null if the list is empty
@function x-list-first($list) {
    @if length($list) == 0 {
        @return null;
    }

    @return nth($list, 1);
}

// Returns the last value of a list
// @function x-list-last
// @param    $list {List}        The list containing the value
// @return         {Number|Null} The last value of the list, or null if the list is empty
@function x-list-last($list) {
    @if length($list) == 0 {
        @return null;
    }

    @return nth($list, length($list));
}

// Flattens list that includes nested list
// @function x-list-flatten
// @param    $list {List} The list to be flatten
// @return         {List} The flattened list
@function x-list-flatten($list) {
    $flattened: ();

    @each $item in $list {
        @if x-is-list($item) {
            $flattened: join($flattened, x-list-flatten($item));
        } @else {
            $flattened: append($flattened, $item);
        }
    }

    @return $flattened;
}
