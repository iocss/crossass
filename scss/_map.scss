// Map
//
// Copyright (c) 2014 Whizark
// @category map

@import "variable";

// Recursively merges one or more maps
// @function x-map-merge
// @param    $maps {Map...} The maps to merge
// @return         {Map}    The merged map
@function x-map-merge($maps...) {
    $merged: nth($maps, 1);

    @for $i from 1 through length($maps) - 1 {
        @each $key, $value in nth($maps, $i + 1) {
            @if x-is-map($value) {
                $value: x-map-merge(map-get($merged, $key), $value);
            }

            @if not x-is-null($key) {
                $merged: map-merge($merged, ($key: $value));
            }
        }
    }

    @return $merged;
}

// Removes an element having the specified key from a map
// @function x-map-remove
// @param    $map {Map} The map having the element to be removed
// @param    $key {*}   The key of the element to be removed
// @return        {Map} The map excluding the element having $key
@function x-map-remove($map, $key) {
    $removed: ();

    @each $_key, $_value in $map {
        @if ($_key != $key) {
            $removed: map-merge($removed, ($_key: $_value));
        }
    }

    @return $removed;
}
